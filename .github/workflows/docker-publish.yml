# GitHub Actions workflow to build and publish a docker image to the GitHub Container Registry
# Author: Wolf Paulus (https://wolfpaulus.com)
#
# This workflow will build a docker image and publish it to the GitHub Container Registry
# For more information see: https://docs.github.com/en/actions/guides/publishing-docker-images
# A Personal Access Token (REPO_GHA_PAT) with repo scope and write:packages permission
# needs to be created and added to the repo secrets
# The container will be built and tested, and then published to the GitHub Container Registry.
# To test the container before publishing, /cicd/healthcheck.sh script will be run instead of the default CMD [.., ..]
# Documentation:
# https://docs.github.com/en/actions/using-workflows/about-workflows
# https://docs.github.com/en/actions/guides/publishing-docker-images
# Workflow dependencies:
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run

name: docker-publish
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io # GitHub Container Registry
  IMAGE_NAME: ${{ github.repository }} # github.repository as <account>/<repo>

jobs:
  publish-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Setting environment variables and converting IMAGE_NAME to lowercase
        run: |
          echo "REGISTRY=${REGISTRY}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> $GITHUB_ENV
      - name: Checkout the repo
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build the docker Docker image / test run it / publish the image
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker run ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest /ai_tutor/healthcheck.sh
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
